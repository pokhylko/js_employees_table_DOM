{"version":3,"sources":["scripts/main.js"],"names":["numberOfColumn","sortedColumn","defaultValue","main","document","querySelector","table","tableHead","tHead","rows","headCells","cells","tableBody","tBodies","bodyRows","HEADING","name","position","office","age","salary","OFFICES","tokyo","singapore","london","newyork","edinburgh","sanfrancisco","NOTIFICATIONS","shortName","title","description","type","lowAge","tooOld","success","sortTableBy","header","sortedRows","sort","getSortMethod","sortBy","a","b","textContent","localeCompare","makeNumber","append","number","parseInt","replace","reverseTable","reversedTable","reverse","row","createMessage","message","createElement","titleMessage","descriptionMessage","classList","add","innerText","addEventListener","event","point","target","i","length","pointRow","parentNode","map","remove","pushNotification","window","setTimeout","createNewEmployeeForm","createForm","officeOption","action","method","innerHTML","form","validateForm","formData","formatSalary","Intl","NumberFormat","format","createEmployeeRow","employee","newRow","handleSubmit","preventDefault","data","FormData","Object","fromEntries","entries","createCellInput","input","value","saveValue","inputItem","parentElement","key"],"mappings":"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","file":"main.4ca3a619.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst main = document.querySelector('body');\nconst table = main.querySelector('table');\nconst tableHead = table.tHead.rows[0];\nconst headCells = table.tHead.rows[0].cells;\nconst tableBody = table.tBodies[0];\nconst bodyRows = tableBody.rows;\nlet numberOfColumn;\nlet sortedColumn;\nlet defaultValue;\nconst HEADING = {\n  name: 'Name',\n  position: 'Position',\n  office: 'Office',\n  age: 'Age',\n  salary: 'Salary',\n};\nconst OFFICES = {\n  tokyo: 'Tokyo',\n  singapore: 'Singapore',\n  london: 'London',\n  newyork: 'New York',\n  edinburgh: 'Edinburgh',\n  sanfrancisco: 'San Francisco',\n};\nconst NOTIFICATIONS = {\n  shortName: {\n    title: 'Wrong  name value',\n    description: 'Name value has less than 4 letters',\n    type: 'error',\n  },\n  lowAge: {\n    title: 'Wrong age value',\n    description: 'Age value is less than 18',\n    type: 'error',\n  },\n  tooOld: {\n    title: 'Wrong age value',\n    description: 'Age value is bigger than 90',\n    type: 'error',\n  },\n  success: {\n    title: 'Succefully added',\n    description: 'New employee successfully added to the table',\n    type: 'success',\n  },\n};\n\n// Sort table column\n\nfunction sortTableBy(header) {\n  const sortedRows = [...bodyRows].sort(getSortMethod(header));\n\n  function getSortMethod(sortBy) {\n    switch (sortBy) {\n      case HEADING.name:\n      case HEADING.position:\n      case HEADING.office: return (a, b) => a.cells[numberOfColumn].textContent\n        .localeCompare(b.cells[numberOfColumn].textContent);\n      case HEADING.age:\n      case HEADING.salary: return (a, b) =>\n        makeNumber(a.cells[numberOfColumn].textContent)\n        - makeNumber(b.cells[numberOfColumn].textContent);\n    }\n  }\n\n  table.tBodies[0].append(...sortedRows);\n}\n\nfunction makeNumber(number) {\n  return parseInt((number).replace(/\\D+/g, ''));\n}\n\n// Reverse table column\n\nfunction reverseTable() {\n  const reversedTable = [...bodyRows].reverse();\n\n  for (const row of reversedTable) {\n    table.tBodies[0].append(row);\n  }\n}\n\n// Sort column on click\n\ntableHead.addEventListener('click', event => {\n  const point = event.target;\n\n  for (let i = 0; i < headCells.length; i++) {\n    if (headCells[i] === point) {\n      numberOfColumn = i;\n    }\n  }\n\n  if (sortedColumn !== point.textContent) {\n    sortedColumn = point.textContent;\n    sortTableBy(point.textContent);\n  } else {\n    reverseTable();\n  }\n});\n\n// Highlight active row\n\ntableBody.addEventListener('click', event => {\n  const pointRow = event.target.parentNode;\n\n  [...bodyRows].map(row => row.classList.remove('active'));\n  pointRow.classList.add('active');\n});\n\n// Create notification\n\nfunction createMessage(title, description, type) {\n  const message = document.createElement('div');\n  const titleMessage = document.createElement('h2');\n  const descriptionMessage = document.createElement('p');\n\n  message.classList.add('notification', type);\n  titleMessage.classList.add('title');\n  titleMessage.innerText = title;\n  descriptionMessage.innerText = description;\n  message.append(titleMessage, descriptionMessage);\n\n  return message;\n}\n\n// Push notification\n\nconst pushNotification = ({ title, description, type }) => {\n  main.append(createMessage(title, description, type));\n\n  const message = document.querySelector('.notification');\n\n  window.setTimeout(function() {\n    message.remove();\n  }, 2000);\n};\n\n// Form of a new value\n\nfunction createNewEmployeeForm() {\n  const createForm = document.createElement('form');\n  let officeOption = '';\n\n  createForm.classList.add('new-employee-form');\n  createForm.action = '/';\n  createForm.method = 'GET';\n  main.append(createForm);\n\n  for (const office in OFFICES) {\n    officeOption += `<option value=\"${office}\">${OFFICES[office]}</option>`;\n  }\n\n  createForm.innerHTML = `\n    <label>Name: <input name=\"name\" type=\"text\" required></label>\n    <label>Position: <input name=\"position\" type=\"text\" required></label>\n    <label>Office: <select name=\"office\">${officeOption}</select></label>\n    <label>Age: <input name=\"age\" type=\"number\" required></label>\n    <label>Salary: <input name=\"salary\" type=\"number\" required></label>\n    <button type=\"submit\">Save to table</button>\n  `;\n}\n\ncreateNewEmployeeForm();\n\nconst form = document.querySelector('form');\n\n// Validate form\n\nfunction validateForm(formData) {\n  const { age, name } = formData;\n\n  if (name.length < 4) {\n    pushNotification(NOTIFICATIONS.shortName);\n\n    return false;\n  }\n\n  if (age < 18) {\n    pushNotification(NOTIFICATIONS.lowAge);\n\n    return false;\n  } else if (age > 90) {\n    pushNotification(NOTIFICATIONS.tooOld);\n\n    return false;\n  }\n\n  return true;\n}\n\n// Format salary\n\nfunction formatSalary(salary) {\n  if (salary.length < 4) {\n    return `$${salary}`;\n  }\n\n  return `$${new Intl.NumberFormat().format(salary)}`;\n}\n\n// Create employee row\n\nfunction createEmployeeRow(employee) {\n  const { name, position, office, age, salary } = employee;\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${name}</td>\n    <td>${position}</td>\n    <td>${OFFICES[office]}</td>\n    <td>${age}</td>\n    <td>${formatSalary(salary)}</td>\n  `;\n\n  return newRow;\n}\n\n// Submited value and add to the row\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const data = new FormData(form); // eslint-disable-line\n  const employee = Object.fromEntries(data.entries());\n\n  if (validateForm(employee)) {\n    tableBody.append(createEmployeeRow(employee));\n\n    pushNotification(NOTIFICATIONS.success);\n  }\n}\n\nform.addEventListener('submit', handleSubmit);\n\n// Create cell input\n\nfunction createCellInput(event) {\n  const point = event.target;\n  const input = document.createElement('input');\n\n  defaultValue = point.textContent;\n  input.classList = 'cell-input';\n  input.value = `${point.textContent}`;\n  point.textContent = '';\n  point.append(input);\n  input.addEventListener('blur', saveValue);\n}\n\n// Save cell value\n\nfunction saveValue() {\n  const inputItem = tableBody.querySelector('input');\n\n  if (inputItem.value !== '') {\n    inputItem.parentElement.textContent = inputItem.value;\n  } else {\n    inputItem.parentElement.textContent = defaultValue;\n  }\n  inputItem.remove();\n}\n\n// Editing table by double click\n\ntableBody.addEventListener('dblclick', event => {\n  if (tableBody.querySelector('input')) {\n    saveValue();\n  }\n\n  createCellInput(event);\n});\n\n// Save value if press Enter\n\nmain.addEventListener('keydown', event => {\n  if (event.key === 'Enter') {\n    saveValue();\n  }\n});\n"]}